version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: anb_postgres
    environment:
      POSTGRES_DB: proyecto_1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - anb_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d proyecto_1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: anb_redis
    ports:
      - "6379:6379"
    networks:
      - anb_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./back
      dockerfile: Dockerfile.api
    container_name: anb_api
    ports:
      - "8080:8080"
    env_file:
      - ./back/.env
    environment:
      PORT: 8080
      HOST: 0.0.0.0
      GIN_MODE: debug
      DB_DRIVER: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: proyecto_1
      DB_USER: postgres
      DB_PASSWORD: password
      DB_SSL_MODE: disable
      REDIS_URL: redis:6379
      JWT_SECRET: local-development-secret-key
      JWT_EXPIRATION: 1h
      UPLOAD_PATH: /app/uploads
      PROCESSED_PATH: /app/processed
      MAX_FILE_SIZE: 104857600
      WORKER_CONCURRENCY: 5
    volumes:
      - video_uploads:/app/uploads
      - video_processed:/app/processed
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - anb_network
    restart: unless-stopped

  worker:
    build:
      context: ./back
      dockerfile: Dockerfile.worker
    container_name: anb_worker
    command: ./worker
    env_file:
      - ./back/.env
    environment:
      DB_DRIVER: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: proyecto_1
      DB_USER: postgres
      DB_PASSWORD: password
      DB_SSL_MODE: disable
      REDIS_URL: redis:6379
      WORKER_MODE: true
      ENVIRONMENT: development
      UPLOAD_PATH: /app/uploads
      PROCESSED_PATH: /app/processed
      WORKER_CONCURRENCY: 3
    volumes:
      - video_uploads:/app/uploads
      - video_processed:/app/processed
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - anb_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: anb_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./back/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./front/dist:/usr/share/nginx/html
    depends_on:
      - api
      - worker
    networks:
      - anb_network
    restart: unless-stopped

volumes:
  postgres_data:
  video_uploads:
  video_processed:

networks:
  anb_network:
    driver: bridge
